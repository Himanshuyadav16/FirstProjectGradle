plugins {
    id 'java'

}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'io.rest-assured:rest-assured:5.3.1'
    implementation group: 'org.json', name: 'json', version: '20090211'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
    implementation group: 'org.apache.maven.plugins', name: 'maven-surefire-plugin', version: '3.0.0-M7'
    implementation group: 'org.apache.maven', name: 'maven-plugin-api', version: '3.9.4'
    testImplementation group: 'org.testng', name: 'testng', version: '7.8.0'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.17.2'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.7'

}

test {
    useTestNG() {
        suites 'src/test/testng.xml'
//       suiteXmlBuilder().suite(name: 'All Test Suite') {
//            test(name : 'Test') {
//                classes('') {
//                    'class'(name: "com.example.testCases.UserTest")
//                    'class'(name: "com.example.testCases.PostTest")
//                    'class'(name: "com.example.testCases.CommentTest")
//                    'class'(name: "com.example.testCases.ToDoTest")
//                }
//            }
        }
    testLogging {
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
            showStandardStreams true
        events = ["Passed", "Skipped", "Failed"]
        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Results: ${result.resultType} (TotalTests - ${result.testCount}, Passed - ${result.successfulTestCount}, Failed - ${result.failedTestCount}, Skipped - ${result.skippedTestCount})"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}








